<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="club.javafan.blog.repository.BlogCommentMapper">
  <resultMap id="BaseResultMap" type="club.javafan.blog.domain.BlogComment">
    <!--@mbg.generated-->
    <!--@Table tb_blog_comment-->
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="commentator" jdbcType="VARCHAR" property="commentator" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="q_number" jdbcType="VARCHAR" property="qNumber" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="head_img" jdbcType="VARCHAR" property="headImage" />
    <result column="website_url" jdbcType="VARCHAR" property="websiteUrl" />
    <result column="comment_body" jdbcType="VARCHAR" property="commentBody" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="commentator_ip" jdbcType="VARCHAR" property="commentatorIp"/>
    <result column="reply_body" jdbcType="VARCHAR" property="replyBody" />
    <result column="reply_create_time" jdbcType="TIMESTAMP" property="replyCreateTime" />
    <result column="comment_status" jdbcType="TINYINT" property="commentStatus" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    comment_id,blog_id, commentator, email,q_number,nick_name,head_img,
    website_url, comment_body, comment_create_time,
    commentator_ip, reply_body, reply_create_time,
    comment_status, is_deleted
  </sql>
  <select id="selectByExample" parameterType="club.javafan.blog.domain.example.BlogCommentExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from tb_blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from tb_blog_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="club.javafan.blog.domain.example.BlogCommentExample">
    <!--@mbg.generated-->
    delete from tb_blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="comment_id" keyProperty="commentId" parameterType="club.javafan.blog.domain.BlogComment" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into tb_blog_comment (blog_id, commentator, email,q_number,nick_name,head_img,
      website_url, comment_body, comment_create_time, 
      commentator_ip, reply_body, reply_create_time, 
      comment_status, is_deleted)
    values (#{blogId,jdbcType=BIGINT}, #{commentator,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{websiteUrl,jdbcType=VARCHAR}, #{commentBody,jdbcType=VARCHAR}, #{commentCreateTime,jdbcType=TIMESTAMP}, 
      #{commentatorIp,jdbcType=VARCHAR}, #{replyBody,jdbcType=VARCHAR}, #{replyCreateTime,jdbcType=TIMESTAMP}, 
      #{commentStatus,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="comment_id" keyProperty="commentId" parameterType="club.javafan.blog.domain.BlogComment" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into tb_blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="commentator != null">
        commentator,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="email != null">
        q_number,
      </if>
      <if test="email != null">
        nick_name,
      </if>
      <if test="email != null">
        head_img,
      </if>
      <if test="websiteUrl != null">
        website_url,
      </if>
      <if test="commentBody != null">
        comment_body,
      </if>
      <if test="commentCreateTime != null">
        comment_create_time,
      </if>
      <if test="commentatorIp != null">
        commentator_ip,
      </if>
      <if test="replyBody != null">
        reply_body,
      </if>
      <if test="replyCreateTime != null">
        reply_create_time,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="commentator != null">
        #{commentator,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qNumber != null">
        #{qNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="websiteUrl != null">
        #{websiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentBody != null">
        #{commentBody,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentatorIp != null">
        #{commentatorIp,jdbcType=VARCHAR},
      </if>
      <if test="replyBody != null">
        #{replyBody,jdbcType=VARCHAR},
      </if>
      <if test="replyCreateTime != null">
        #{replyCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="club.javafan.blog.domain.example.BlogCommentExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from tb_blog_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update tb_blog_comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.blogId != null">
        blog_id = #{record.blogId,jdbcType=BIGINT},
      </if>
      <if test="record.commentator != null">
        commentator = #{record.commentator,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qNumber != null">
        q_number = #{record.qNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.headImage != null">
        head_img = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.websiteUrl != null">
        website_url = #{record.websiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.commentBody != null">
        comment_body = #{record.commentBody,jdbcType=VARCHAR},
      </if>
      <if test="record.commentCreateTime != null">
        comment_create_time = #{record.commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentatorIp != null">
        commentator_ip = #{record.commentatorIp,jdbcType=VARCHAR},
      </if>
      <if test="record.replyBody != null">
        reply_body = #{record.replyBody,jdbcType=VARCHAR},
      </if>
      <if test="record.replyCreateTime != null">
        reply_create_time = #{record.replyCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentStatus != null">
        comment_status = #{record.commentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update tb_blog_comment
    set comment_id = #{record.commentId,jdbcType=BIGINT},
      blog_id = #{record.blogId,jdbcType=BIGINT},
      commentator = #{record.commentator,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      q_number = #{record.qNumber,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      head_img = #{record.headImage,jdbcType=VARCHAR},
      website_url = #{record.websiteUrl,jdbcType=VARCHAR},
      comment_body = #{record.commentBody,jdbcType=VARCHAR},
      comment_create_time = #{record.commentCreateTime,jdbcType=TIMESTAMP},
      commentator_ip = #{record.commentatorIp,jdbcType=VARCHAR},
      reply_body = #{record.replyBody,jdbcType=VARCHAR},
      reply_create_time = #{record.replyCreateTime,jdbcType=TIMESTAMP},
      comment_status = #{record.commentStatus,jdbcType=TINYINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="club.javafan.blog.domain.BlogComment">
    <!--@mbg.generated-->
    update tb_blog_comment
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=BIGINT},
      </if>
      <if test="commentator != null">
        commentator = #{commentator,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qNumber != null">
        q_number = #{qNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_img = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="websiteUrl != null">
        website_url = #{websiteUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentBody != null">
        comment_body = #{commentBody,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentatorIp != null">
        commentator_ip = #{commentatorIp,jdbcType=VARCHAR},
      </if>
      <if test="replyBody != null">
        reply_body = #{replyBody,jdbcType=VARCHAR},
      </if>
      <if test="replyCreateTime != null">
        reply_create_time = #{replyCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="club.javafan.blog.domain.BlogComment">
    <!--@mbg.generated-->
    update tb_blog_comment
    set blog_id = #{blogId,jdbcType=BIGINT},
      commentator = #{commentator,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      q_number = #{qNumber,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      head_img = #{headImage,jdbcType=VARCHAR},
      website_url = #{websiteUrl,jdbcType=VARCHAR},
      comment_body = #{commentBody,jdbcType=VARCHAR},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      commentator_ip = #{commentatorIp,jdbcType=VARCHAR},
      reply_body = #{replyBody,jdbcType=VARCHAR},
      reply_create_time = #{replyCreateTime,jdbcType=TIMESTAMP},
      comment_status = #{commentStatus,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <select id="findBlogCommentList" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tb_blog_comment
    where is_deleted=0
    <if test="blogId!=null">
      AND blog_id = #{blogId}
    </if>
    <if test="commentStatus!=null">
      AND comment_status = #{commentStatus}
    </if>
    order by comment_id desc
    <if test="start!=null and limit!=null">
      limit #{start},#{limit}
    </if>
  </select>
  <select id="getTotalBlogComments" parameterType="Map" resultType="int">
    select count(*) from tb_blog_comment
    where is_deleted=0
    <if test="blogId!=null">
      AND blog_id = #{blogId}
    </if>
    <if test="commentStatus!=null">
      AND comment_status = #{commentStatus}
    </if>
  </select>
  <update id="checkDone">
    update tb_blog_comment
    set comment_status=1 where comment_id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
    and comment_status = 0
  </update>
  <update id="deleteBatch">
    update tb_blog_comment
    set is_deleted= 1 where comment_id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <update id="deleteBatchByBlogId">
    update tb_blog_comment
    set is_deleted= 1 where blog_id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
</mapper>